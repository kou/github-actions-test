name: Release
on:
  push:
jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        id:
          - hello1
          - hello2
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "${{ github.ref }}"
      - uses: actions/checkout@master
        if: |
          startsWith(github.ref, 'refs/tags/')
      - name: Create assets
        if: |
          startsWith(github.ref, 'refs/tags/')
        run: |
          touch ${{ matrix.id }}.txt
          mkdir -p sub
          touch sub/${{ matrix.id }}.txt
          tar czf ${{ matrix.id }}.tar.gz ${{ matrix.id }}.txt sub
      - name: Ensure creating release
        if: |
          startsWith(github.ref, 'refs/tags/')
        id: create-release
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const AsyncFunction = Object.getPrototypeOf(async () => {}).constructor
            const fs = require("fs");
            const path = ".github/workflows/ensure-creating-release.js";
            const script = fs.readFileSync(path).toString();
            const func = new AsyncFunction("require", "github", "context", script);
            return await func(require, github, context);
      - name: Upload release
        if: |
          startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.result }}
          asset_path: ${{ matrix.id }}.tar.gz
          asset_name: ${{ matrix.id }}.tar.gz
          asset_content_type: application/gzip
