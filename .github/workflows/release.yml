name: Release
on:
  push:
    tags:
      - "*"
jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        id:
          - hello1
          - hello2
    runs-on: ubuntu-latest
    steps:
      - name: Create assets
        run: |
          touch ${{ matrix.id }}.txt
          mkdir -p sub
          touch sub/${{ matrix.id }}.txt
          tar czf ${{ matrix.id }}.tar.gz ${{ matrix.id }}.txt sub
      - name: Ensure creating release
        id: create-release
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const {owner: owner, repo: repo} = context.repo;
            const tag = "${{ github.ref }}".replace("refs/tags/", "")
            try {
              const {data: release} = await github.repos.getReleaseByTag({
                owner: owner,
                repo: repo,
                tag: tag
              });
              return release.upload_url;
            } catch (e) {
              const {data: createdRelease} = await github.repos.createRelease({
                owner: owner,
                repo: repo,
                tag_name: tag
              });
              return createdRelease.upload_url;
            }
      - name: Debug
        run: |
          echo "${{ toJSON(steps.create-release.outputs.result) }}"
      - name: Upload release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.result }}
          asset_path: ${{ matrix.id }}.tar.gz
          asset_name: ${{ matrix.id }}.tar.gz
          asset_content_type: application/gzip
